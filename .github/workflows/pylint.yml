# This is a basic workflow to help you get started with Actions

name: pylint-ci

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: install dependencies
        run: |
          pip install pipenv
          pipenv lock -r > requirements.txt
          python -m pip install -r requirements.txt
      
      - name: Pylint action
     # You may pin to the exact commit or the version.
     # uses: gabriel-milan/action-pylint@5a2e0c4a6af3a7fac3c45e724b96d45f2a7a4352
        uses: gabriel-milan/action-pylint@v1
        with:
          # GitHub token
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          # Path of files
          path: src/
          # If true, the action will fail if pylint finds errors (default is true)
          fail: true
          # If true, the action will send a PR message if pylint finds errors (default is true)
          pr-message: true
      
      # run linting
      - name: run pylint
        run: pylint src/ --fail-under 10
